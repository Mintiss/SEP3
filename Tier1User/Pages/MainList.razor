@page "/mainlist"

@using Tier1User.Data

@inject Model model




<h1>Items</h1>

<p>The Items are in the code, not in the DB</p>

<div class="row margin-bottom-20">

    <div class="col-md-9">
        <input placeholder="Search" type="text" @bind="search" onkeyup="" />
        <button class="btn btn-success" type="button" @onclick="SearchClick">Search</button>
    </div>
</div>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Title</th>
                <th>Type</th>
                <th>Author</th>
                <th>InStock</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
            <tr>
                <td>@item.Date.ToShortDateString()</td>
                <td>@item.Title</td>
                <td>@item.Type</td>
                <td>@item.Author</td>
                <td>@item.InStock</td>
                <td><button class="btn btn-success" //@onclick="ReserveItemClickAsync">Reserve</button></td>
                @if (reservation == true)
                {
                    <div class="alert alert-success">
                        <strong>Reserved</strong>
                    </div>

                    reservation = false;
                }
            </tr>
            }
        </tbody>
    </table>
}

@code {
    Item[] items;
    string search = string.Empty;
    bool reservation;



    /*protected override async Task OnInitializedAsync()
    {
        items = await model.GetItemAsync(DateTime.Now);
    }

    public async void ReserveItemClickAsync()
    {

        reservation = await this.model.ReserveItemAsync();



    }*/

    protected void SearchClick()
    {

    }
}